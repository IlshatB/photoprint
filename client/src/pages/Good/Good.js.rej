diff a/client/src/pages/Good/Good.js b/client/src/pages/Good/Good.js	(rejected hunks)
@@ -1,19 +1,41 @@
 import { Link } from 'react-router-dom'
 import { Card, Typography, Skeleton, Carousel, Image, Tabs, Button } from 'antd'
 import { EditOutlined } from '@ant-design/icons'
-import { cyan} from '@ant-design/colors'
+
+import { geekblue } from '@ant-design/colors'
+import { cyan } from '@ant-design/colors'
 
 import { useCurrentClient } from '../../hooks'
 import Admin from '../Admin/AdminContainer'
 
+
 import fallback from '../../assets/images/fallback.png'
 import styles from './goodStyles'
 
+
+const contentStyle = {
+    display: 'flex',
+    justifyContent: 'center',
+    backgroundColor: geekblue[0],
+};
+
+
 const Good = ({ good, loading = false }) => {
     return (
-        <Card title={<CardTitle good={good} loading={loading} />}bordered={false}>
-            <CardImages images={good?.images ?? []} loading={loading} />
-            <Tabs defaultActiveKey="description" onChange={() => {}} type="card">
+        <Card title={<CardTitle good={good} loading={loading} />} bordered={false}>
+            <Carousel>
+                {
+                    good?.images.map((image) => {
+                        return <div><div style={contentStyle}>
+                            <Image height={300} src={image.url} preview={false} />
+                        </div>
+                        </div>
+                    })
+
+                }
+
+            </Carousel>
+            <Tabs defaultActiveKey="description" onChange={() => { }} type="card">
                 <Tabs.TabPane tab="╨Ю╨┐╨╕╤Б╨░╨╜╨╕╨╡" key="description">
                     <Description description={good?.description ?? ''} loading={loading} />
                 </Tabs.TabPane>
@@ -32,16 +54,16 @@ const CardTitle = ({ good, loading }) => {
             <div>
                 <div style={styles.headerTitle}>
                     <Typography.Title level={3}>{good?.name}</Typography.Title>
-                        <Link to={`edit`}>
-                            <Button shape="circle" icon={<EditOutlined />} size="small" onClick={e => e.stopPropagation()} />
-                        </Link>
+                    <Link to={`edit`}>
+                        <Button shape="circle" icon={<EditOutlined />} size="small" onClick={e => e.stopPropagation()} />
+                    </Link>
                 </div>
                 <div>
                     <Typography.Text style={styles.price}>╨╛╤В</Typography.Text>
                     <Typography.Text style={{ ...styles.price, ...styles.salePrice(isSale) }} type={isSale && 'secondary'} delete={isSale}>  {good?.price}  </Typography.Text>
                     <Typography.Text style={styles.price}>{getPriceWithSale(good?.price, good?.sale)}</Typography.Text>
                 </div>
-            </div>   
+            </div>
         ) : (
             <div style={styles.skeleton}>
                 <Skeleton.Input active block size="small" style={{ width: '100%', marginBottom: 8 }} />
@@ -53,15 +75,15 @@ const CardTitle = ({ good, loading }) => {
 }
 
 const CardImages = ({ images, loading }) => {
-    return !loading ? (    
+    return !loading ? (
         images.length > 0 ? (
             <Carousel autoplay effect="fade">
                 {images.map(image => (
                     <div>
-                    <div style={styles.imageContent}>
-                        <Image height={300} src={image} preview={false} />
+                        <div style={styles.imageContent}>
+                            <Image height={300} src={image} preview={false} />
+                        </div>
                     </div>
-                </div>
                 ))}
             </Carousel>
         ) : (
@@ -69,15 +91,15 @@ const CardImages = ({ images, loading }) => {
                 <img
                     style={{ objectFit: 'contain' }}
                     src={fallback}
-                />                            
+                />
             </div>
         )
     ) : (
         <div style={styles.skeleton}>
             {Array.from(Array(7).keys()).map((_, id) => (
                 <Skeleton.Input key={`skeleton-${id}`} active block size="small" style={{ width: '100%' }} />
-            )) }
-        </div> 
+            ))}
+        </div>
     )
 }
 
